name: Deploy to DigitalOcean

on:
  push:
    branches: [master]

env:
  REGISTRY: 'rustamyusupov'
  FRONTEND_IMAGE: 'rstm-frontend'
  BACKEND_IMAGE: 'rstm-backend'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build the Docker images
        run: docker-compose build --parallel
      - name: Docker Push
        run: docker-compose push

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Digital Ocean droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          envs: REGISTRY, FRONTEND_IMAGE, BACKEND_IMAGE, {{ secrets.DOCKERHUB_USERNAME }}, {{ secrets.DOCKERHUB_TOKEN }}
          script: |
            # Login to registry
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            # Delete all containers
            docker rm -vf $(docker ps -aq)
            # Remove all images
            docker rmi -f $(docker images -aq)
            # Pull containers
            docker pull $REGISTRY/$BACKEND_IMAGE:latest
            docker pull $REGISTRY/$FRONTEND_IMAGE:latest
            # Run containers
            docker-compose up -d
            # docker run -d \
            #   --publish 3000:3000 \
            #   --restart always \
            #   --name $BACKEND_IMAGE \
            #   $REGISTRY/$BACKEND_IMAGE:latest
            # docker run -d \
            #   --network="host" \
            #   --publish 80:80 \
            #   --restart always \
            #   --name $FRONTEND_IMAGE \
            #   $REGISTRY/$FRONTEND_IMAGE:latest
